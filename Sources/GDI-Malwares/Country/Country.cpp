#include "main.h"
#include "sound.h"

//Default GDI

DWORD WINAPI garbled(LPVOID lpParam)
{
	int uVar1;
	HWND hWnd;
	int iVar2;
	uint uVar3;
	CHAR* lpString;
	CHAR local_9;
	do {
		iVar2 = 0;
		do {
			uVar1 = rdtsc();
			uVar3 = (uint)uVar1 ^ (uint)uVar1 << 0xd;
			uVar3 = uVar3 ^ uVar3 << 0x11;
			(&local_9)[iVar2] = (CHAR)((ulonglong)(uVar3 << 5 ^ uVar3) % 0x47);
			iVar2 = iVar2 + 1;
		} while (iVar2 < 0x46);
		lpString = &local_9;
		hWnd = GetForegroundWindow();
		SetWindowTextA(hWnd, lpString);
		Sleep(10);
	} while (true);
}

DWORD WINAPI line(LPVOID lpParam)
{
	HDC desk = GetDC(0);
	int xs = GetSystemMetrics(0), ys = GetSystemMetrics(1);
	while (1)
	{
		LineTo(desk, rand() % xs, rand() % ys);
		Sleep(1);
	}
}

//GDI Designation

//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\

//payload1

DWORD WINAPI gdi1(LPVOID lpParam)
{
	HDC desk = GetDC(0);
	int x = GetSystemMetrics(0), y = GetSystemMetrics(1);
	while (1)
	{
		desk = GetDC(0);
		SelectObject(desk, CreateSolidBrush(RGB(500, 0, 0)));
		PatBlt(desk, 0, -540, x, y, PATCOPY);
		PatBlt(desk, 0, 540, x, y, WHITENESS);
		Sleep(25);
	}
}

//payload2

DWORD WINAPI gdi2(LPVOID lpParam)
{
	HDC desk = GetDC(0);
	int sw = GetSystemMetrics(SM_CXSCREEN), sh = GetSystemMetrics(SM_CYSCREEN), xSize = sh / 10, ySize = 9;
	while (1)
	{
		HDC desk = GetDC(0);
		for (int i = 0; i < sh * 2; i++)
		{
			int wave = sin(i / ((float)xSize) * M_PI) * (ySize);
			BitBlt(desk, i, 0, 1, sh, desk, i, wave, SRCCOPY);
		}
		for (int i = 0; i < sw * 2; i++)
		{
			int wave = sin(i / ((float)xSize) * M_PI) * (ySize);
			BitBlt(desk, 0, i, sw, 1, desk, wave, i, SRCCOPY);
		}
	}
}

//payload3

DWORD WINAPI gdi3(LPVOID lpParam)
{
	HDC desk = GetDC(0);
	int x = GetSystemMetrics(0), y = GetSystemMetrics(1);
	while (1)
	{
		desk = GetDC(0);
		SelectObject(desk, CreateSolidBrush(RGB(0, 0, 500)));
		PatBlt(desk, 0, -540, x, y, PATCOPY);
		SelectObject(desk, CreateSolidBrush(RGB(500, 500, 0)));
		PatBlt(desk, 0, 540, x, y, PATCOPY);
		Sleep(25);
	}
}

//payload4

DWORD WINAPI gdi4(LPVOID lpParam)
{
	HDC desk = GetDC(0);
	int x = GetSystemMetrics(0), y = GetSystemMetrics(1);
	while (1)
	{
		desk = GetDC(0);
		SelectObject(desk, CreateSolidBrush(RGB(450, 0, 0)));
		PatBlt(desk, 430, -540, x, y, PATCOPY);
		SelectObject(desk, CreateSolidBrush(RGB(0, 450, 0)));
		PatBlt(desk, 430, 540, x, y, PATCOPY);
		PatBlt(desk, -1490, 0, x, y, WHITENESS);
		Sleep(25);
	}
}

//payload5

DWORD WINAPI gdi5(LPVOID lpParam)
{
	HDC desk = GetDC(0);
	int x = GetSystemMetrics(0), y = GetSystemMetrics(1);
	while (1)
	{
		desk = GetDC(0);
		SelectObject(desk, CreateSolidBrush(RGB(500, 500, 0)));
		PatBlt(desk, 430, -540, x, y, PATCOPY);
		SelectObject(desk, CreateSolidBrush(RGB(500, 0, 0)));
		PatBlt(desk, 430, 540, x, y, PATCOPY);
		SelectObject(desk, CreateSolidBrush(RGB(0, 450, 0)));
		PatBlt(desk, -1490, 0, x, y, PATCOPY);
		Sleep(250);
	}
}

DWORD WINAPI gdi6(LPVOID lpParam)
{
	HDC desk = GetDC(0);
	int sw = GetSystemMetrics(0), sh = GetSystemMetrics(1);
	RECT rekt;
	POINT wPt[3];
	while (1)
	{
		GetWindowRect(GetDesktopWindow(), &rekt);
		wPt[0].x = rand() % sw; wPt[0].y = rand() % sh;
		wPt[1].x = rand() % sw; wPt[1].y = rand() % sh;
		wPt[2].x = rand() % sw; wPt[2].y = rand() % sh;
		PlgBlt(desk, wPt, desk, rekt.left, rekt.top, rekt.right - rekt.left, rekt.bottom - rekt.top, 0, 0, 0);
		Sleep(5);
	}
}

int WINAPI WinMain(HINSTANCE a, HINSTANCE b, LPSTR c, int d)
{
	MessageBox(NULL, TEXT("GDI SAFETY MALWARE"), TEXT("NEKOTONKATU"), MB_ICONINFORMATION);

	//Default GDI

	sound1();
	CreateThread(0, 0, garbled, 0, 0, 0);
	CreateThread(0, 0, line, 0, 0, 0);
	HANDLE payload1 = CreateThread(0, 0, gdi1, 0, 0, 0);
	Sleep(10000);
	TerminateThread(payload1, 0);
	CloseHandle(payload1);
	RedrawWindow(0, 0, 0, 133);
	HANDLE payload2 = CreateThread(0, 0, gdi2, 0, 0, 0);
	Sleep(10000);
	TerminateThread(payload2, 0);
	CloseHandle(payload2);
	RedrawWindow(0, 0, 0, 133);
	HANDLE payload3 = CreateThread(0, 0, gdi3, 0, 0, 0);
	Sleep(10000);
	TerminateThread(payload3, 0);
	CloseHandle(payload3);
	RedrawWindow(0, 0, 0, 133);
	HANDLE payload4 = CreateThread(0, 0, gdi4, 0, 0, 0);
	Sleep(10000);
	TerminateThread(payload4, 0);
	CloseHandle(payload4);
	RedrawWindow(0, 0, 0, 133);
	HANDLE payload5 = CreateThread(0, 0, gdi5, 0, 0, 0);
	Sleep(5000);
	HANDLE payload5_2 = CreateThread(0, 0, gdi6, 0, 0, 0);
	Sleep(5000);
	TerminateThread(payload5, 0);
	CloseHandle(payload5);
	TerminateThread(payload5_2, 0);
	CloseHandle(payload5_2);
	RedrawWindow(0, 0, 0, 133);
	exit(1);
	while (1) {}
}